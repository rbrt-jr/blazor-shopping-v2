@page "/products/edit/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer
@attribute [Authorize]

<h1>@Model.Title</h1>
<EditForm Model="@Model" OnValidSubmit="OnSubmitAsysnc">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    
    <div class="mb-3">
        <label class="form-label">Product name</label>
        <InputText @bind-Value="Model.Title" class="form-control"></InputText>
        <ValidationMessage For="@(() => Model.Title)"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Price</label>
        <InputNumber @bind-Value="Model.Price" class="form-control"/>
        <ValidationMessage For="@(() => Model.Title)"/>
    </div>
    
    <div class="mb-3">
        <label class="form-label">Category</label>
        <InputSelect @bind-Value="Model.CategoryId" class="form-control">
            @foreach (var categories in Categories)
            {
                <option value="@categories.Id">
                    @categories.Title
                </option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    &nbsp;
    <a href="/products">Cancel</a>
</EditForm>

@code{

    [Parameter]
    public int Id { get; set; }
    
    public Product Model { get; set; } = new();

    public IEnumerable<Category> Categories { get; set; } = Enumerable.Empty<Category>();

    protected override async void OnInitialized()
    {
        Model = await Context.Products
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.Id == Id) ?? new(); 
        Categories = await Context.Categories.AsNoTracking().ToListAsync();
    }

    public async Task OnSubmitAsysnc()
    {
        Context.Products.Update(Model);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("/products");
    }

}